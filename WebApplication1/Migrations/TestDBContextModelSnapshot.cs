// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(TestDBContext))]
    partial class TestDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.EmployeeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsBonusAdded")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsBonusAdded = true,
                            JoinDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "John",
                            PositionId = 1,
                            Salary = 50000.00m
                        },
                        new
                        {
                            Id = 2,
                            IsBonusAdded = true,
                            JoinDate = new DateTime(2021, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagerId = 1,
                            Name = "Ron",
                            PositionId = 2,
                            Salary = 40000.00m
                        },
                        new
                        {
                            Id = 3,
                            IsBonusAdded = false,
                            JoinDate = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagerId = 2,
                            Name = "Jack",
                            PositionId = 3,
                            Salary = 30000.00m
                        },
                        new
                        {
                            Id = 4,
                            IsBonusAdded = true,
                            JoinDate = new DateTime(2022, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagerId = 2,
                            Name = "Jane",
                            PositionId = 3,
                            Salary = 32000.00m
                        },
                        new
                        {
                            Id = 5,
                            IsBonusAdded = false,
                            JoinDate = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagerId = 4,
                            Name = "Hun",
                            PositionId = 3,
                            Salary = 28000.00m
                        },
                        new
                        {
                            Id = 6,
                            IsBonusAdded = true,
                            JoinDate = new DateTime(2021, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagerId = 1,
                            Name = "Mike",
                            PositionId = 2,
                            Salary = 35000.00m
                        },
                        new
                        {
                            Id = 7,
                            IsBonusAdded = false,
                            JoinDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagerId = 6,
                            Name = "Sara",
                            PositionId = 3,
                            Salary = 29000.00m
                        },
                        new
                        {
                            Id = 8,
                            IsBonusAdded = true,
                            JoinDate = new DateTime(2023, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagerId = 6,
                            Name = "Alex",
                            PositionId = 3,
                            Salary = 31000.00m
                        },
                        new
                        {
                            Id = 9,
                            IsBonusAdded = false,
                            JoinDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagerId = 7,
                            Name = "Chris",
                            PositionId = 3,
                            Salary = 27000.00m
                        },
                        new
                        {
                            Id = 10,
                            IsBonusAdded = true,
                            JoinDate = new DateTime(2022, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagerId = 7,
                            Name = "Emily",
                            PositionId = 3,
                            Salary = 32000.00m
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "General Manager"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Office Executive"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.EmployeeInfo", b =>
                {
                    b.HasOne("WebApplication1.Models.EmployeeInfo", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("WebApplication1.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
